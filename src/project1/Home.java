/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package project1;

import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBCursor;
import com.mongodb.DBObject;
import com.mongodb.MongoClient;
import java.awt.Color;
import java.net.UnknownHostException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.bson.types.ObjectId;

/**
 *
 * @author DELL
 */
public class Home extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    public Home() {
        initComponents();
        home_panel.setBackground(new Color(255,255,255,220));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        home_panel = new javax.swing.JPanel();
        search_btn = new javax.swing.JButton();
        order_btn = new javax.swing.JButton();
        text1 = new javax.swing.JTextField();
        update_btn = new javax.swing.JButton();
        logout_btn = new javax.swing.JButton();
        back_btn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        name_text = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        search_btn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        search_btn.setText("Search Books");
        search_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_btnActionPerformed(evt);
            }
        });

        order_btn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        order_btn.setText("Order Books");
        order_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                order_btnActionPerformed(evt);
            }
        });

        text1.setBackground(new java.awt.Color(0, 0, 0));
        text1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        text1.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout home_panelLayout = new javax.swing.GroupLayout(home_panel);
        home_panel.setLayout(home_panelLayout);
        home_panelLayout.setHorizontalGroup(
            home_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(home_panelLayout.createSequentialGroup()
                .addContainerGap(90, Short.MAX_VALUE)
                .addGroup(home_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, home_panelLayout.createSequentialGroup()
                        .addComponent(search_btn)
                        .addGap(64, 64, 64)
                        .addComponent(order_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(81, 81, 81))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, home_panelLayout.createSequentialGroup()
                        .addComponent(text1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(112, 112, 112))))
        );
        home_panelLayout.setVerticalGroup(
            home_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(home_panelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(text1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addGroup(home_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(order_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(110, Short.MAX_VALUE))
        );

        getContentPane().add(home_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, 470, 260));

        update_btn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        update_btn.setText("Update Account");
        update_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_btnActionPerformed(evt);
            }
        });
        getContentPane().add(update_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 20, -1, -1));

        logout_btn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        logout_btn.setText("Logout");
        logout_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logout_btnActionPerformed(evt);
            }
        });
        getContentPane().add(logout_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 20, 90, -1));

        back_btn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        back_btn.setText("Back");
        back_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_btnActionPerformed(evt);
            }
        });
        getContentPane().add(back_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project1/2.jpg"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 620, 470));

        name_text.setBackground(new java.awt.Color(0, 0, 0));
        name_text.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        name_text.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(name_text, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 220, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void back_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_btnActionPerformed
        // TODO add your handling code here:
        //this.hide();
        //user_entry ue = new user_entry();
        //ue.setVisible(true);
        //new Front().setVisible(true);
        //this.dispose();
        this.toBack();
        setVisible(false);
        new user_entry().setVisible(true);
    }//GEN-LAST:event_back_btnActionPerformed

    private void search_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_btnActionPerformed
        // TODO add your handling code here:
        MongoClient mongoClient = null;
        DBCursor cursor = null;
        try {
                mongoClient = new MongoClient( "localhost" , 27017 );
                DB db = mongoClient.getDB( "Book_Store_Management" );
                DBCollection coll = db.getCollection("Book_Details_owner");
                cursor = coll.find();

                String[] columnNames = {"id", "Course","Subject" ,"Author","Edition","Year of Passing","Quantity","Price per book"}; //
                DefaultTableModel model = new DefaultTableModel(columnNames, 0);

                while(cursor.hasNext()) {
                    DBObject obj = cursor.next();
                    String course = (String)obj.get("Course");
                    String subject = (String)obj.get("subject");
                    String author = (String)obj.get("author");
                    String edition = (String)obj.get("edition");
                    int yop = ((Number) obj.get("yop")).intValue();
                    int qty = ((Number) obj.get("quantity")).intValue();
                    int ppb = ((Number) obj.get("price_per_book")).intValue();     
                    ObjectId id = (ObjectId)obj.get("_id");
                    model.addRow(new Object[] { id, course, subject, author, edition, yop, qty, ppb});
                }
                Owner_book_table owt = new Owner_book_table();
                owt.t1.setModel(model);
                owt.setVisible(true);
                

                cursor.close(); 
                mongoClient.close();
            } catch (UnknownHostException ex) {
                
            } finally {
                if (cursor!= null) {
                    cursor.close();
                }
                if (mongoClient != null) {
                     mongoClient.close();
                }   
            }
    }//GEN-LAST:event_search_btnActionPerformed

    private void order_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_order_btnActionPerformed
        // TODO add your handling code here:
        MongoClient mongoClient = null;
        DBCursor cursor = null;
        try {
                            mongoClient = new MongoClient( "localhost" , 27017 );
                            DB db1 = mongoClient.getDB( "Book_Store_Management" );
                            DBCollection coll = db1.getCollection("Book_Details_owner");
                            cursor = coll.find();

                            String[] columnNames = {"id", "Course","Subject" ,"Author","Edition","Year of Passing","Quantity","Price per book"}; //
                            DefaultTableModel model = new DefaultTableModel(columnNames, 0);

                            while(cursor.hasNext()) {
                                DBObject obj = cursor.next();
                                String course = (String)obj.get("Course");
                                String subject = (String)obj.get("subject");
                                String author = (String)obj.get("author");
                                String edition = (String)obj.get("edition");
                                int yop = ((Number) obj.get("yop")).intValue();
                                int qty = ((Number) obj.get("quantity")).intValue();
                                int ppb = ((Number) obj.get("price_per_book")).intValue();     
                                ObjectId id = (ObjectId)obj.get("_id");
                                model.addRow(new Object[] { id, course, subject, author, edition, yop, qty, ppb});
                            }
                            purchase_details owt = new purchase_details();
                            owt.purchase_table.setModel(model);
                            owt.new_cust.setText(text1.getText());
                            owt.setVisible(true);
                            cursor.close(); 
                            mongoClient.close();
                        } catch (UnknownHostException ex) {

                        } finally {
                            if (cursor!= null) {
                                cursor.close();
                            }
                            if (mongoClient != null) {
                                 mongoClient.close();
                            }   
                        }
        
        
        
        
        
        /*user_entry ue = new user_entry();
        String a = ue.email.getText();
        text1.setText(a);
        purchase_details owt = new purchase_details();
        owt.setVisible(true);*/
    }//GEN-LAST:event_order_btnActionPerformed

    private void update_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_btnActionPerformed
        // TODO add your handling code here:
        //User_Update up = new User_Update();
        //up.setVisible(true);
        this.toBack();
        User_Update up= new User_Update();
        up.setVisible(true);
        up.toFront();
        
        
    }//GEN-LAST:event_update_btnActionPerformed

    private void logout_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logout_btnActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null,"Succesfully Logout");
        dispose();
        Front1 front = new Front1();
        front.setVisible(true);
    }//GEN-LAST:event_logout_btnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back_btn;
    private javax.swing.JPanel home_panel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton logout_btn;
    public static javax.swing.JTextField name_text;
    private javax.swing.JButton order_btn;
    private javax.swing.JButton search_btn;
    public static javax.swing.JTextField text1;
    private javax.swing.JButton update_btn;
    // End of variables declaration//GEN-END:variables

    private void close() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
